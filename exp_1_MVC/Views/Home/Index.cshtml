@using exp_1_MVC.Models
@{
    Layout = null;

    var ad = "Nur";
    var soyad = "Öztürk";
    var isimler = new List<string>() { "ömer", "batu" };

    // ogrenci cs oluşturunuz ve ad soyad, okul no propları ile. ve öğrenci listesi oluşturunuz.

    List<Ogrenci> ogrenciler = new List<Ogrenci>() {
        new Ogrenci(){Name="Nur", Surname="Öztürk", StudentNumber= "123"},
        new Ogrenci(){Name="Ali", Surname="Korkmaz", StudentNumber= "124"},
        new Ogrenci(){Name="Çiğdem", Surname="Türkmen", StudentNumber= "125"}

        };






}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
</head>
<body>
    <div>
        cs + html = cshtml > Razor
        @* @ ile razor tanımlaması yapılabilir. Razor C# ifadelerini değerlendirir ve bunları HTML çıktısında işler.Razor is a markup syntax that flows seamlessly between HTML and C# and Visual Basic syntax*@
    </div>

    <h1>@ad</h1>
    <h2>@soyad</h2>

    <p>ctrl + F5  ile debugsız çalıştırma. debugla çalıştırma içinse F5.</p>

    <ul>
        @foreach (var item in isimler)
        {
            <li>@item</li>
        }
    </ul>

    @{
        int[] sayilar = { 10, 20, 30, 40, 50 }; // değişkenlerini buralarda tanımlama. en yukarıda tanımla.
    }

    <ul>
        @for (int i = 0; i < sayilar.Length; i++)
        {
            var item = sayilar[i];
            <li>@(i+1). sayı @item</li>
        }
    </ul>
    <table border="1">
        <tr>
            <th>Okul No</th>
            <th>Ad</th>
            <th>Soyad</th>
        </tr>
        @foreach (var item in ogrenciler)
        {
            <tr>
                <td>@item.StudentNumber</td>
                <td>@item.Name</td>
                <td>@item.Surname</td>
            </tr>
        }

    </table>



</body>
</html>
